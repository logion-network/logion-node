
//! Autogenerated weights for `pallet_lo_authority_list`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-12-07, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `gerard-XPS-13-9305`, CPU: `11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/logion-node
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --pallet
// pallet_lo_authority_list
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// runtime/src/weights/pallet_lo_authority_list.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_lo_authority_list`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_lo_authority_list::WeightInfo for WeightInfo<T> {
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:54 w:1)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LoAuthorityList::LegalOfficerNodes` (r:0 w:1)
	/// Proof: `LoAuthorityList::LegalOfficerNodes` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn add_legal_officer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4910`
		//  Estimated: `139550`
		// Minimum execution time: 243_589_000 picoseconds.
		Weight::from_parts(258_521_000, 0)
			.saturating_add(Weight::from_parts(0, 139550))
			.saturating_add(T::DbWeight::get().reads(54))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:53 w:1)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LoAuthorityList::LegalOfficerNodes` (r:0 w:1)
	/// Proof: `LoAuthorityList::LegalOfficerNodes` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn remove_legal_officer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4910`
		//  Estimated: `137075`
		// Minimum execution time: 353_828_000 picoseconds.
		Weight::from_parts(364_906_000, 0)
			.saturating_add(Weight::from_parts(0, 137075))
			.saturating_add(T::DbWeight::get().reads(53))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:53 w:1)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LoAuthorityList::LegalOfficerNodes` (r:0 w:1)
	/// Proof: `LoAuthorityList::LegalOfficerNodes` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_legal_officer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4910`
		//  Estimated: `137075`
		// Minimum execution time: 244_677_000 picoseconds.
		Weight::from_parts(253_044_000, 0)
			.saturating_add(Weight::from_parts(0, 137075))
			.saturating_add(T::DbWeight::get().reads(53))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
