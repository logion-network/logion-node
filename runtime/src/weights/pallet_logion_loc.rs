
//! Autogenerated weights for `pallet_logion_loc`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-12-05, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `gerard-XPS-13-9305`, CPU: `11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/logion-node
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --pallet
// pallet_logion_loc
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// runtime/src/weights/pallet_logion_loc.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_logion_loc`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_logion_loc::WeightInfo for WeightInfo<T> {
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocMap` (r:11 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::AccountLocsMap` (r:1 w:1)
	/// Proof: `LogionLoc::AccountLocsMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_polkadot_identity_loc() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2280`
		//  Estimated: `30495`
		// Minimum execution time: 80_429_000 picoseconds.
		Weight::from_parts(83_209_000, 0)
			.saturating_add(Weight::from_parts(0, 30495))
			.saturating_add(T::DbWeight::get().reads(13))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocMap` (r:1 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_logion_identity_loc() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `209`
		//  Estimated: `3674`
		// Minimum execution time: 16_143_000 picoseconds.
		Weight::from_parts(16_652_000, 0)
			.saturating_add(Weight::from_parts(0, 3674))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocMap` (r:11 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::AccountLocsMap` (r:1 w:1)
	/// Proof: `LogionLoc::AccountLocsMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_polkadot_transaction_loc() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2280`
		//  Estimated: `30495`
		// Minimum execution time: 83_294_000 picoseconds.
		Weight::from_parts(85_795_000, 0)
			.saturating_add(Weight::from_parts(0, 30495))
			.saturating_add(T::DbWeight::get().reads(13))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocMap` (r:2 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::IdentityLocLocsMap` (r:1 w:1)
	/// Proof: `LogionLoc::IdentityLocLocsMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_logion_transaction_loc() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `378`
		//  Estimated: `6318`
		// Minimum execution time: 24_874_000 picoseconds.
		Weight::from_parts(25_536_000, 0)
			.saturating_add(Weight::from_parts(0, 6318))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocMap` (r:11 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::AccountLocsMap` (r:1 w:1)
	/// Proof: `LogionLoc::AccountLocsMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_collection_loc() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2280`
		//  Estimated: `30495`
		// Minimum execution time: 83_899_000 picoseconds.
		Weight::from_parts(84_998_000, 0)
			.saturating_add(Weight::from_parts(0, 30495))
			.saturating_add(T::DbWeight::get().reads(13))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `LogionLoc::LocMap` (r:1 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1267`
		//  Estimated: `4732`
		// Minimum execution time: 19_600_000 picoseconds.
		Weight::from_parts(20_074_000, 0)
			.saturating_add(Weight::from_parts(0, 4732))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LogionLoc::LocMap` (r:1 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_file() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1307`
		//  Estimated: `4772`
		// Minimum execution time: 26_706_000 picoseconds.
		Weight::from_parts(27_543_000, 0)
			.saturating_add(Weight::from_parts(0, 4772))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LogionLoc::LocMap` (r:2 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_link() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1446`
		//  Estimated: `7386`
		// Minimum execution time: 21_645_000 picoseconds.
		Weight::from_parts(22_415_000, 0)
			.saturating_add(Weight::from_parts(0, 7386))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LogionLoc::LocMap` (r:1 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn make_void() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `277`
		//  Estimated: `3742`
		// Minimum execution time: 16_049_000 picoseconds.
		Weight::from_parts(16_367_000, 0)
			.saturating_add(Weight::from_parts(0, 3742))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LogionLoc::LocMap` (r:2 w:2)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn make_void_and_replace() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `463`
		//  Estimated: `6403`
		// Minimum execution time: 23_854_000 picoseconds.
		Weight::from_parts(24_750_000, 0)
			.saturating_add(Weight::from_parts(0, 6403))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `LogionLoc::LocMap` (r:1 w:0)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::CollectionItemsMap` (r:1 w:1)
	/// Proof: `LogionLoc::CollectionItemsMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::CollectionSizeMap` (r:1 w:1)
	/// Proof: `LogionLoc::CollectionSizeMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_collection_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `334`
		//  Estimated: `3799`
		// Minimum execution time: 31_483_000 picoseconds.
		Weight::from_parts(32_084_000, 0)
			.saturating_add(Weight::from_parts(0, 3799))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocMap` (r:1 w:0)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::VerifiedIssuersMap` (r:1 w:1)
	/// Proof: `LogionLoc::VerifiedIssuersMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn nominate_issuer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `444`
		//  Estimated: `3909`
		// Minimum execution time: 18_808_000 picoseconds.
		Weight::from_parts(19_528_000, 0)
			.saturating_add(Weight::from_parts(0, 3909))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::VerifiedIssuersMap` (r:1 w:1)
	/// Proof: `LogionLoc::VerifiedIssuersMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocsByVerifiedIssuerMap` (r:1 w:0)
	/// Proof: `LogionLoc::LocsByVerifiedIssuerMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn dismiss_issuer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `418`
		//  Estimated: `3883`
		// Minimum execution time: 24_585_000 picoseconds.
		Weight::from_parts(25_389_000, 0)
			.saturating_add(Weight::from_parts(0, 3883))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocMap` (r:1 w:0)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::VerifiedIssuersMap` (r:1 w:0)
	/// Proof: `LogionLoc::VerifiedIssuersMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::VerifiedIssuersByLocMap` (r:1 w:1)
	/// Proof: `LogionLoc::VerifiedIssuersByLocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocsByVerifiedIssuerMap` (r:0 w:1)
	/// Proof: `LogionLoc::LocsByVerifiedIssuerMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_issuer_selection() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `631`
		//  Estimated: `4096`
		// Minimum execution time: 30_405_000 picoseconds.
		Weight::from_parts(31_312_000, 0)
			.saturating_add(Weight::from_parts(0, 4096))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `LogionLoc::LocMap` (r:1 w:0)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::TokensRecordsMap` (r:1 w:1)
	/// Proof: `LogionLoc::TokensRecordsMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_tokens_record() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `281`
		//  Estimated: `3746`
		// Minimum execution time: 26_783_000 picoseconds.
		Weight::from_parts(27_736_000, 0)
			.saturating_add(Weight::from_parts(0, 3746))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::LocMap` (r:1 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::SponsorshipMap` (r:1 w:1)
	/// Proof: `LogionLoc::SponsorshipMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::OtherAccountLocsMap` (r:1 w:1)
	/// Proof: `LogionLoc::OtherAccountLocsMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_other_identity_loc() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `356`
		//  Estimated: `3821`
		// Minimum execution time: 35_542_000 picoseconds.
		Weight::from_parts(36_661_000, 0)
			.saturating_add(Weight::from_parts(0, 3821))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `LoAuthorityList::LegalOfficerSet` (r:1 w:0)
	/// Proof: `LoAuthorityList::LegalOfficerSet` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::SponsorshipMap` (r:1 w:1)
	/// Proof: `LogionLoc::SponsorshipMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn sponsor() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `209`
		//  Estimated: `3674`
		// Minimum execution time: 16_629_000 picoseconds.
		Weight::from_parts(17_047_000, 0)
			.saturating_add(Weight::from_parts(0, 3674))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LogionLoc::SponsorshipMap` (r:1 w:1)
	/// Proof: `LogionLoc::SponsorshipMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn withdraw_sponsorship() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `189`
		//  Estimated: `3654`
		// Minimum execution time: 12_494_000 picoseconds.
		Weight::from_parts(12_912_000, 0)
			.saturating_add(Weight::from_parts(0, 3654))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LogionLoc::LocMap` (r:1 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::VerifiedIssuersByLocMap` (r:1 w:0)
	/// Proof: `LogionLoc::VerifiedIssuersByLocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn acknowledge_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1320`
		//  Estimated: `4785`
		// Minimum execution time: 21_352_000 picoseconds.
		Weight::from_parts(21_732_000, 0)
			.saturating_add(Weight::from_parts(0, 4785))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LogionLoc::LocMap` (r:1 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::VerifiedIssuersByLocMap` (r:1 w:0)
	/// Proof: `LogionLoc::VerifiedIssuersByLocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn acknowledge_file() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1360`
		//  Estimated: `4825`
		// Minimum execution time: 20_776_000 picoseconds.
		Weight::from_parts(21_616_000, 0)
			.saturating_add(Weight::from_parts(0, 4825))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LogionLoc::LocMap` (r:1 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LogionLoc::VerifiedIssuersByLocMap` (r:1 w:0)
	/// Proof: `LogionLoc::VerifiedIssuersByLocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn acknowledge_link() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1444`
		//  Estimated: `4909`
		// Minimum execution time: 21_074_000 picoseconds.
		Weight::from_parts(21_662_000, 0)
			.saturating_add(Weight::from_parts(0, 4909))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `LogionLoc::LocMap` (r:1 w:1)
	/// Proof: `LogionLoc::LocMap` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn close() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3397`
		//  Estimated: `6862`
		// Minimum execution time: 29_953_000 picoseconds.
		Weight::from_parts(31_223_000, 0)
			.saturating_add(Weight::from_parts(0, 6862))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
